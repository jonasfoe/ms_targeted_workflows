function parse_sil_sequence(seq::AbstractString)
	i_sil = findall(islowercase, seq)
	setsil(parse(Peptide, uppercase(seq)), i_sil)
end

# gets transformed later to [(irt, pep, pep_labeled)]
irt_peptides = [
    (-27.60, "SSAAPPPPPr"),
    (-17.47, "GISNEGQNASIk"),
	(-9.98, "HVLTSIGEk"),
	(-3.88, "DIPVPKPk"),
	(7.84, "IGDYAGIk"),
	(18.42, "TASEFDSAIAQDk"),
	(26.22, "SAAGAFGPELSr"),
	(32.61, "ELGQSGVDTYLQTk"),
	(51.41, "SFANQPLEVVYSk"),
	(52.36, "GLILVGGYGTr"),
	(54.27, "GILFVGSGVSGGEEGAr"),
	(71.78, "LTILEELr"),
    (76.52, "NGFILDGFPr"), #(73.44 - 68.55) / (76.63 - 68.55) * (79.61 - 71.78) + 71.78
	(79.61, "ELASGLSFPVGFk"),
	(90.41, "LSSEAPALFQFDLk"),
]
irt_peptides = map(irt_peptides) do x
	pep = parse_sil_sequence(x[2])
	(x[1], clearsil(pep), pep)
end

spiketides = Dict{Symbol, Dict{Symbol, Vector{String}}}(
	:hlaa2 => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			"FGPvNHEEL",
			"KAlINADEL",
			"AAlENTHLL",
			"AIlDEVTHV",
			"AlNEKLVNL",
			"KlGEIVTTI",
			"YLlPAIVHI",
			"AIVDKvPSV",
		],
		:set => [
			"YMLDlQPETT",
			"YMLDlQPET",
			"TlHEYMLDL",
			"LLMGTLGiV",
			"RTLEDLlMGTL",
			"YMLDlQPETTD",
			"MLDlQPETT",
			"YMlDLQPE",
			"ELQTTiHDI",
			"MLDlQPET",
			"TLEDlLMGT",
			"RTLEDlLMGT",
			"DLLMGTLGiV",
			"IRTLEDlLMGT",
			"EDLLMGTLGiV",
			"TLHEYMlDLQP",
			"EYMlDlQPET",
		],
	),
	:hlaa2_new => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			# "FGPvNHEEL",
			"kALINADEL",
			"AAlENTHll",
			"AilDEVTHV",
			"ALNEkLVNL",
			"kLGEIVTTI",
			"YLLPAIvHI",
			"AIVDkVPSV",
		],
		:set => [
			"YMLDLQpETT",
			"YMLDLQpET",
			"TlHEYMlDl",
			"LLMGTLGIv",
			"rTLEDLLMGTL",
			"YMLDLQpETTD",
			"MLDLQpETT",
			"YMLDLQpE",
			"ElQTTiHDi",
			"MLDLQpET",
			"TlEDllMGT",
			"rTLEDLLMGT",
			"DLLMGTLGIv",
			"IrTLEDLLMGT",
			"EDLLMGTLGIv",
			"TLHEYMLDLQp",
			"EYMlDlQPET",
		],
	),
	:hlaa2_mix => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			"fGPVNHEEL",
			"KALiNADEL",
			"AAlENTHll",
			"AILDEVTHv",
			"AlNEKLVNL",
			"kLGEIVTTI",
			"YLlPAIVHI",
			"AIVDKvPSV",
		],
		:set => [
			"YMLDlQPETT",
			"YMLDlQPET",
			"TlHEYMLDL",
			"LLMGTLGiV",
			"RTLEDLlMGTL",
			"YMLDLQpETTD",
			"MLDlQPETT",
			"YMlDLQPE",
			"ELQTTiHDI",
			"MLDlQPET",
			"TLEDlLMGT",
			"rTLEDLLMGT",
			"DLLMGTLGIv",
			"IRTLEDlLMGT",
			"EDLLMGTLGiV",
			"TLHEYMlDLQP",
			"EYMlDlQPET",
		],
	),
	:hlaa2_pepscan => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			"AiLDEVTHV",
			"AilDEVTHV",
			"AIlDEVTHV",
			"kLGEIVTTI",
		],
		:set => [
			"rTLEDLLMGT",
			"YMlDlQPETTD",
		],
	),
	:hlaa2_synpep => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			"fGPVNHEEL",
			"KALiNADEL",
			"AILDEVTHv",
			"kLGEIVTTI",
			"YLlPAIVHI",
		],
		:set => [
			"rTLEDLLMGT",
			"YMLDLQpETTD",
		],
	),
	:hlaa2_a3_synpep => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"GLFGDIYLAi",
			"SLADEAEVYl",
			"ILNAMIAKi",
			"FQDPQERPi",
			"TiHDIILECV",
			"TiHEIILECV",
			"KLPDLCTEl",
			"ELQTTIHEi",
			"FQDPQERPIKl",
			"TTIHEIRlECV",
			"YRYYCYSv",
			"TTiHDIILECV",
			"KiSEYRHYC",
			"SEYRYYCYSv",
			"LMGTLGIVCPi",
			"LLMGTlGIVC",
			"GTLGIVCPi",
			"DLLMGTlGIVC",
			"TlGIVCPIC",
			"RCINCQKPlCP",
			"RHYCYSvYGTT",
			"LLIRCiNCQK",
			"KClKFYSKI",
			"LIRCiNCQK",
			"AVCDKClKFY",
			"IILECvYCK",
			"CvYCKQQLLR",
			"AVCDKClK",
			"RHYCYSlY",
			"IVCPiCSQK",
			"GIVCPiCSQK",
		],
	),
	:lalli => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"TLIIAVlV",
			"SLEEFNVl",
			"VIAEMMEl",
			"IIAVlVSA",
			"LVIAEMMEl",
			"LIIAVlVSA",
			"VMRRQlYAV",
			"LVSASIANl",
			"QLYAVNRRl",
			"SIANLWlWM",
			"HLVIAEMMEl",
			"TLIIAVlVSA",
			"VLVSASIANl",
			"SLEEFNVlEM",
			"IIAVlVSASI",
			"LIIAVlVSAS",
			"RQLYAVNRRl",
			"EVMRRQlYAV",
			"RETLIIAVlV",
			"AQTSlEEFNV",
			"MEVMRRQlYA",
			"ETLIIAVlVSA",
			"LIIAVlVSASI",
			"EHLVIAEMMEl",
			"AVLVSASIANl",
			"MEVMRRQlYAV",
			"TLIIAVlVSAS",
			"TSLEEFNVlEM",
			"QLYAVNRRlRA",
			"HLVIAEMMElG",
			"LVSASIANLWl",
		],
	),
	:hlaa2_cys => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"TlGIVCPI",
			"MGTlGIVCPI",
			"TTIHEIIlECV",
			"KLPDlCTELQT",
			"FAFRDLCiV",
			"TIHEIRlECV",
			"KLPQlCTEL",
			"YrYYCYSL",
			"TIHEIIlEC",
			"LLMGTLGIvCP",
			"KLPQLCTElQT",
			"RYYCYSlYGT",
			"RlCVQSTHV",
			"KISEYrYYCYS",
			"IlECVYCKQQL",
			"KISEYrYYC",
			"SEYrYYCYSL",
			"AVCDKClKFYS",
		],
	),
	:hlaa3 => Dict(
		:pos => [],
		:neg => [],
		:extra => [
			"KIADRFlLY",
			"KLLNYAPlEK",
		],
		:set => [
			"SVYGTTlEQQY",
			"SLYGTTlEQQY",
			"GTTlEQQYNK",
			"TTlEQQYNK",
			"KFYSKiSEY",
			"IVYrDGNPY",
			"HLDKKQrFH",
			"KFYSKiSEYR",
			"MFQDPQErPRK",
			"KQRFHNiRGR",
		],
	),
	:tipc113 => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"ILRALRHlFSV",
			"VLIDVEKlEA",
			"QLHGFSvLI",
			"LQLHGFSvLI",
			"KLVVVGAvGV",
			"VlSDRGNEI",
			"RLRVDlAEEL",
			"QLHGFSVlIDV",
			"VLSDRGNEiV",
			"VNLDlSPLTL",
		],
	),
	:tipc102 => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"LlEAQYGV",
			"KLlHVLTA",
			"GLESSlTSI",
			"KLVVvGADGV",
			"FALHiIFV",
			"ALlEAQYGV",
			"FALHIIFvT",
			"ALLEAQYGvV",
			"VTvDKWEPV",
			"LALlEAQYGV",
			"SLRITlYEL",
			"MTANlTHLEV",
			"LALLEAQYGvV",
			# "SLRITLYELA", is light for some reason
			"DLALlEAQYGV",
			"SMTANlTHLEV",
			"FICDYGEiFNV",
		],
	),
	:tipc222 => Dict(
		:pos => [],
		:neg => [],
		:extra => [],
		:set => [
			"AiMSDTTHL",
			"AIMSDTTHlV",
			"EIGAIvYPV",
			"FEIGAIvYPV",
			"FEIGAIVYPvA",
			"FMSELlFQN",
			"GLATSSpFQL",
			"HLDEREClHML",
			"IMSDTTHLvT",
			"IMSDTTHlVTL",
			"KISTEAvGV",
			"KLVVvGADGV",
			"KMWFSpQSKKV",
			"LlDRYAGNI",
			"MLDMGFEPQiS",
			"SFEIGAIvYPV",
			"TAIMSDTTHlV",
			"VMNKSGvSRV",
			"WlNWENPDFM",
		],
	),
)
spiketides = Dict(k_major => Dict(k_minor => parse_sil_sequence.(seqs) for (k_minor, seqs) in dict_minor) for (k_major, dict_minor) in spiketides)
